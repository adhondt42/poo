## Typescript en POO ## 

	################
### INTRODUCE		###
	################

	Terminal :
	tsc		--target es5
			--help
			-inti					: Create tsconfig.json
		 	-w 						: watch builind each save
	 		--pretty demo.ts		: Pretty error messages


	################
### POO NOTES		###
	################

		In class Object :
			Privacy levels : Public, static, private 
		
		namespae :Creer des mega objet pour isoler des bout de code... ~= module (25:20) https://www.youtube.com/watch?v=n6RoVyZEsv4&t=1323s

		Differents way to create an object
			function : Create a basic function 
			class : Lot of data to can be used
			new : Create new instance (not a son) 
				When adding method to object, add to prototype so that is accessible to all instances
			Object.create : Create a son (??)
				check prototype chained list
			extends : create a son, "super" key word usage required

		Interfaces: Create ReadOnly object that rules this object usage

		
		Call vs Super : https://stackoverflow.com/questions/38034059/javascript-whats-the-difference-between-call-and-super
		
		
		enum : Define my own types {
			enum Color {Red, Green, Blue}
			let c: Color = Color.Green;
		}

	TODO:
		Faire des test d'heritage entre les differentes methodes


	DOC BETON : 
		https://developer.mozilla.org/fr/docs/Web/JavaScript/Guide/Le_mod%C3%A8le_objet_JavaScript_en_d%C3%A9tails#La_cr%C3%A9ation_de_la_hi%C3%A9rarchie
